name: Rust

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

env:
  CARGO_TERM_COLOR: always
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  build_and_test:
    if: ( ! github.event.pull_request.draft )
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@v2.0.0

      - name: "Build"
        run: cargo build

      - name: "Test"
        run: cargo test --lib --bins --tests --examples --workspace

      - name: "Check documentation"
        # env:
        #   RUSTDOCFLAGS: -D warnings
        run: cargo doc --no-deps --workspace --lib --document-private-items --examples

      - name: Run Clippy
        # env:
        #   RUSTDOCFLAGS: -D warnings
        run: cargo clippy --all-targets --all-features

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Nightly with rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt

      - name: "Check formatting"
        run: cargo +nightly fmt --check --all